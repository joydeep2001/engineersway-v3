/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import {
  useGLTF,
  Stage,
  Grid,
  OrbitControls,
  Environment,
  Bounds,
  GizmoHelper,
  GizmoViewport,
  ArcballControls,
} from "@react-three/drei";
import { easing } from "maath";
import { useControls, folder } from "leva";
import { useEffect } from "react";

function Model({ ...props }) {
  const group = useRef();
  const T_Cover = useRef();
  const { nodes, materials } = useGLTF(
    `${process.env.NEXT_PUBLIC_S3_MODEL_BUCKET}/Transformer1.glb`
  );
  const { TopCover, Cover_Visible } = useControls("TopCover", {
    TopCover: {
      value: 0,
      min: 0,
      max: 25,
      step: 0.1,
    },
    Cover_Visible: true,
  });
  useEffect(() => {
    if (Cover_Visible == false) {
      T_Cover.current.position.y = 800;
    } else {
      T_Cover.current.position.y = 7.15 + TopCover;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Boss-Extrude2111-1"].geometry}
        material={materials.Paper_Insulator}
        position={[12.23, 4.96, -6.55]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BreatherBody-1"].geometry}
        material={materials.BreatherBody}
        position={[19.58, 13.25, -8.7]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BreatherSilicaGel-1"].geometry}
        material={materials.SilikaGel}
        position={[19.57, 13.04, -8.7]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BuchholzRelay-1"].geometry}
        material={materials.Buchholz_Relay}
        position={[14.42, 11.65, -5.41]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_CoreFormer-1"].geometry}
        material={materials.coreformer}
        position={[6.86, 3.59, -8.95]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_CorrugatedTank-1"].geometry}
        ref={T_Cover}
        material={materials.CorrugatedTank}
        position={[6.33, 7.15 + TopCover, -8.03]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus1-1"].geometry}
        material={materials.HV_Bus}
        position={[11.16, 10.03, -9.34]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Coil-1"].geometry}
        material={materials.HV_Coil}
        position={[6.9, 4.16, -9.07]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LPattern133-1"].geometry}
        material={materials.Lv_coil}
        position={[7.91, 8.42, -6.11]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing2-1"].geometry}
        material={materials.LV_Bushing}
        position={[5.34, 9.18, -7.26]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing3-1"].geometry}
        material={materials.LV_Bushing}
        position={[6.63, 9.18, -6.69]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing4-1"].geometry}
        material={materials.LV_Bushing}
        position={[7.91, 9.18, -6.12]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator2-1"].geometry}
        material={materials.LV_Insulator}
        position={[5.36, 9.73, -7.31]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator4-1"].geometry}
        material={materials.LV_Insulator}
        position={[7.93, 9.73, -6.16]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Mirror1211-1"].geometry}
        material={materials.Bolt}
        position={[15.01, 11.1, -5.31]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector3-1"].geometry}
        material={materials.Ring_Connector}
        position={[11.11, 8.54, -9.22]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_TopCover-1"].geometry}
        material={materials.TopCover}
        position={[8.11, 9.44, -8.69]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_YPhaseInsulator-1"].geometry}
        material={materials.YPhase_Insulator}
        position={[11.16, 10.93, -9.34]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BPhaseInsulator-1"].geometry}
        material={materials.BPhase_Insulator}
        position={[7.72, 10.93, -10.87]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Conservator-1"].geometry}
        material={materials.Conservater}
        position={[16.68, 12.62, -5.86]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_ConservatorTankCap-1"].geometry}
        material={materials.ConservatorTankCap}
        position={[17.6, 14.36, -4.27]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Core-1"].geometry}
        material={materials.Core}
        position={[6.86, 4.25, -8.95]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus2-1"].geometry}
        material={materials.HV_Bus}
        position={[7.72, 10.03, -10.87]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus3-1"].geometry}
        material={materials.HV_Bus}
        position={[4.28, 10.03, -12.41]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LPattern88-1"].geometry}
        material={materials.Bolt}
        position={[4.49, 9.87, -12.87]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing1-1"].geometry}
        material={materials.LV_Bushing}
        position={[4.06, 9.18, -7.84]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator1-1"].geometry}
        material={materials.LV_Insulator}
        position={[4.08, 9.73, -7.88]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator3-1"].geometry}
        material={materials.LV_Insulator}
        position={[6.65, 9.73, -6.73]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector1-1"].geometry}
        material={materials.Ring_Connector}
        position={[4.23, 8.54, -12.28]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector2-1"].geometry}
        material={materials.Ring_Connector}
        position={[7.67, 8.54, -10.75]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RPhaseInsulator-1"].geometry}
        material={materials.RPhase_Insulator}
        position={[4.28, 10.93, -12.41]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_YPhaseInsulator-1001"].geometry}
        material={materials.YPhase_Insulator}
        position={[11.16, 10.93, -9.34]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BPhaseInsulator-1001"].geometry}
        material={materials.BPhase_Insulator}
        position={[7.72, 10.93, -10.87]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RPhaseInsulator-1001"].geometry}
        material={materials.RPhase_Insulator}
        position={[4.28, 10.93, -12.41]}
        rotation={[-Math.PI / 2, 0, -0.42]}
        scale={0.05}
      />
    </group>
  );
}

useGLTF.preload(`${process.env.NEXT_PUBLIC_S3_MODEL_BUCKET}/Transformer1.glb`);

export default function DcShunt() {
  // const {ca}
  // const {X,Y,Z} = useControls("Camera", {
  //   X: {
  //     value: 0,
  //     min: -25,
  //     max: 25,
  //     step: 0.1,
  //   },
  //   Y: {
  //     value: 0,
  //     min: -25,
  //     max: 25,
  //     step: 0.1,
  //   },
  //   Z: {
  //     value: 0,
  //     min: -25,
  //     max: 25,
  //     step: 0.1,
  //   },

  // })
  return (
    <>
      <div style={{ height: 100 + "vh" }}>
        {/* <fog attach="fog" args={['black', 15, 21.5]} /> */}
        <Canvas
          gl={{ logarithmicDepthBuffer: true }}
          shadows
          camera={{ position: [-15, 25, 30], fov: 45 }}
        >
          <color attach="background" args={["#0d1117"]} />
          {/* <directionalLight intensity={1} /> */}
          <pointLight
            position={[-0.564129, 12.0037, 2.08061]}
            intensity={0.1}
          />
          {/* <directionalLight intensity={1}  /> */}
          {/* <directionalLight intensity={0.4} position={[0, 5, 25]} />
          <directionalLight intensity={1} position={[0, -5, 0]} /> */}

          <Stage
            intensity={0.5}
            environment={null}
            shadows={{ type: "accumulative", bias: -0.001 }}
            adjustCamera={false}
          >
            <Model rotation={[0, Math.PI, 0]} />
          </Stage>

          <OrbitControls
            enableZoom={true}
            makeDefault
            minPolarAngle={Math.PI / 2}
            maxPolarAngle={Math.PI / 2}
          />
          {/* <Environment background preset="forest" blur={0.9} /> */}
          <GizmoHelper
            alignment="bottom-right"
            margin={[80, 80]}
            renderPriority={-1}
          >
            <GizmoViewport axisColors={["hotpink", "aquamarine", "#3498DB"]} />
          </GizmoHelper>

          {/* <ArcballControls  makeDefault /> */}
        </Canvas>
      </div>
    </>
  );
}
