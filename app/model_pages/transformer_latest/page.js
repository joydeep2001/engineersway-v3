/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 transformer_latest.glb 
*/
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 transformer.glb 
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import ModelJSXGenerator from "@/components/ModelJSXGenerator";
import { useControls } from "leva";

export function Model(props) {
  const { nodes, materials } = useGLTF("/models/transformer.glb");
  const { Y } = useControls("Tank", {
    Y: {
      value: 0,
      min: 0,
      max: 600,
      step: 0.1,
    },
  });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Boss-Extrude2111-1"].geometry}
        material={materials.Paper_Insulator}
        position={[12.232, 4.963, -6.554]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BreatherBody-1"].geometry}
        material={materials.BreatherBody}
        position={[19.575, 13.245, -8.698]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BreatherSilicaGel-1"].geometry}
        material={materials.SilikaGel}
        position={[19.575, 13.038, -8.697]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BuchholzRelay-1"].geometry}
        material={materials.Buchholz_Relay}
        position={[14.417, 11.653, -5.411]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_CoreFormer-1"].geometry}
        material={materials.coreformer}
        position={[6.864, 3.59, -8.947]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_CorrugatedTank-1"].geometry}
        material={materials.CorrugatedTank}
        position={[6.332, 7.152 + Y, -8.027]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus1-1"].geometry}
        material={materials.HV_Bus}
        position={[11.164, 10.033, -9.339]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Coil-1"].geometry}
        material={materials.HV_Coil}
        position={[6.897, 4.164, -9.066]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LPattern133-1"].geometry}
        material={materials.Lv_coil}
        position={[7.909, 8.422, -6.108]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing2-1"].geometry}
        material={materials.LV_Bushing}
        position={[5.344, 9.178, -7.263]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing3-1"].geometry}
        material={materials.LV_Bushing}
        position={[6.628, 9.178, -6.69]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing4-1"].geometry}
        material={materials.LV_Bushing}
        position={[7.913, 9.178, -6.118]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator2-1"].geometry}
        material={materials.LV_Insulator}
        position={[5.364, 9.732, -7.306]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator4-1"].geometry}
        material={materials.LV_Insulator}
        position={[7.933, 9.732, -6.161]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Mirror1211-1"].geometry}
        material={materials.Bolt}
        position={[15.014, 11.099, -5.314]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector3-1"].geometry}
        material={materials.Ring_Connector}
        position={[11.109, 8.538, -9.216]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_TopCover-1"].geometry}
        material={materials.TopCover}
        position={[8.113, 9.435, -8.686]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_YPhaseInsulator-1"].geometry}
        material={materials.YPhase_Insulator}
        position={[11.164, 10.93, -9.339]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BPhaseInsulator-1"].geometry}
        material={materials.BPhase_Insulator}
        position={[7.724, 10.93, -10.873]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Conservator-1"].geometry}
        material={materials.Conservater}
        position={[16.685, 12.623, -5.86]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_ConservatorTankCap-1"].geometry}
        material={materials.ConservatorTankCap}
        position={[17.602, 14.361, -4.27]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_Core-1"].geometry}
        material={materials.Core}
        position={[6.865, 4.25, -8.946]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus2-1"].geometry}
        material={materials.HV_Bus}
        position={[7.724, 10.033, -10.873]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_HV_Bus3-1"].geometry}
        material={materials.HV_Bus}
        position={[4.283, 10.033, -12.407]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LPattern88-1"].geometry}
        material={materials.Bolt}
        position={[4.488, 9.874, -12.866]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Bushing1-1"].geometry}
        material={materials.LV_Bushing}
        position={[4.06, 9.178, -7.835]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator1-1"].geometry}
        material={materials.LV_Insulator}
        position={[4.079, 9.732, -7.879]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_LV_Insulator3-1"].geometry}
        material={materials.LV_Insulator}
        position={[6.648, 9.732, -6.734]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector1-1"].geometry}
        material={materials.Ring_Connector}
        position={[4.228, 8.538, -12.284]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RingConnector2-1"].geometry}
        material={materials.Ring_Connector}
        position={[7.668, 8.538, -10.75]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RPhaseInsulator-1"].geometry}
        material={materials.RPhase_Insulator}
        position={[4.283, 10.93, -12.406]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_YPhaseInsulator-1001"].geometry}
        material={materials.YPhase_Insulator}
        position={[11.164, 10.93, -9.339]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_BPhaseInsulator-1001"].geometry}
        material={materials.BPhase_Insulator}
        position={[7.724, 10.93, -10.873]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["a_-_RPhaseInsulator-1001"].geometry}
        material={materials.RPhase_Insulator}
        position={[4.283, 10.93, -12.406]}
        rotation={[-Math.PI / 2, 0, -0.419]}
        scale={0.05}
      />
    </group>
  );
}

useGLTF.preload("/models/transformer.glb");

export default function transformer() {
  const camera = { position: [5, 2, 5], fov: 30 };
  const directionalLight = [
    { intensity: 1, position: null },
    { intensity: 1, position: [0, 5, -25] },
    { intensity: 1, position: [0, 5, 25] },
    { intensity: 1, position: [0, -5, -25] },
    { intensity: 1, position: [-5, 18.25, -54.37] },
  ];
  return (
    <ModelJSXGenerator
      //state={state}
      directionalLight={directionalLight}
      camera={camera}
      bgcolor="#fff"
    >
      <Model rotation={[0, Math.PI, 0]} />
    </ModelJSXGenerator>
  );
}
useGLTF.preload("/models/transformer.glb");
